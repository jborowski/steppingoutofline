diff --git a/src/target.js b/src/target.js
index 5aec3c5..6b0c105 100644
--- a/src/target.js
+++ b/src/target.js
@@ -1,45 +1,32 @@
-NSTC.Target = function(state, leftFinger, rightFinger, timer, x, y){
+NSTC.Target = function(state, attachments){
   this.state = state;
   this.game = this.state.game;
-  this.inactiveGraphic = new Phaser.Graphics().beginFill(0xFF0000).drawCircle(0,0,50,50);
-  this.activeGraphic = new Phaser.Graphics().beginFill(0x00FF00).drawCircle(0,0,50,50);
-  this.hitGraphic = new Phaser.Graphics().beginFill(0x888888).drawCircle(0,0,50,50);
-  Phaser.Sprite.call(this, this.game, x, y, this.inactiveGraphic.generateTexture());
-  this.state.targets.add(this);
-
+  
   this.cVars = {
-    leftFinger: leftFinger,
-    rightFinger: rightFinger,
-    timer: timer,
+    positions: [],
     active: false,
-    hit: false
+    hitBy: null
   };
+  this.attachments = attachments;
 
-  this.cUpdate = function(){
-    // If inactive, see if we should become active yet
-    if(!this.cVars.active && this.cVars.timer < this.state.music.currentTime){
-      this.cVars.active = true;
-      this.texture = this.activeGraphic.generateTexture();
-    }
+  this.inactiveGraphic = new Phaser.Graphics().beginFill(0xFF0000).drawRect(0,0,50,50);
+  this.activeGraphic = new Phaser.Graphics().beginFill(0x00FF00).drawRect(0,0,50,50);
+  this.hitGraphic = new Phaser.Graphics().beginFill(0x888888).drawRect(0,0,50,50);
+  var firstLine = this.attachments[0].finger.line;
+  var firstPosition = this.attachments[0].position
+  var startX = firstLine.getPointAt(firstPosition).x
+  Phaser.Sprite.call(this, this.game, startX, this.attachments[0].finger.y+50, this.inactiveGraphic.generateTexture());
+  this.state.targets.add(this);
+  this.anchor.setTo(0,0.5);
+  this.box = new Phaser.Rectangle(startX, finger.y+40, startX+50, finger.y+60);
 
-    // If active, see if we're being touched by any fingers
-    if(this.cVars.active && !this.cVars.hit){
-      if(this.cVars.leftFinger.isRight()){
-        this.cVars.leftFinger.succeed();
-        this.cVars.hit = true;
-        this.kill();
-      } else if(this.cVars.rightFinger.isLeft()){
-        this.cVars.rightFinger.succeed();
-        this.cVars.hit = true;
-        this.kill();
-      }
-    }
 
-    if(this.cVars.hit && this.cVars.timer > this.state.music.currentTime){
-      this.texture = this.inactiveGraphic.generateTexture();
-      this.cVars.hit = false;
-      this.cVars.active = false;
-      this.revive();
+  this.cUpdate = function(){
+    for(var ii=0;ii<this.attachments.length);ii+=1){
+      var attachment = this.attachments[ii];
+      if(this.box.containsPoint(this.box, attachment.finger)){
+        attachment.finger.onTarget();
+      }
     }
   };
 }
